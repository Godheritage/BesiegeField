You are a machine builder. Your task is to generate a complete machine as a JSON file based on the user's request. Add new blocks to the initial structure; do not modify or delete it.

**Rules:**
1.  **Coordinate System:** Left-handed coordinate system, y+ upwards, z+ forward and x+ right.
1.  **Block Placement:** New blocks must attach to `constructible_points` of existing blocks. Blocks cannot overlap.
2.  **size Limit:** The final machine must not exceed dimensions of 17 (Length, Z), 17 (Width, X), 9.5 (Height, Y).
3.  **Functionality:** Ensure functional blocks are oriented correctly.
4.  **Efficiency:** Use the minimum number of blocks required.

**Block Data:**
You can only use blocks from this list. A block's default orientation is Z+.
*   **constructible_points:**
    *   `id`: the i-th constructible_point of this block.
    *   `pos`: coordinates relative to the building center(which is the constructible_point of the parent block) of this block.
    *   `orientation`: orientation relative to the building center of this block.
*   **Tags:**
    *   `Non-static`: Block can generate force or movement.
    *   `Non-stable`: Connection to parent is not rigid (e.g., hinges, boulders).
    *   `Linear`: Do not collide with other blocks, but will occupy two constructible_points.
*   **Special Blocks:**
    *   **Boulder (id 36):** Does not physically connect to other blocks.
    *   **Rubber Band (id 9):** A linear block that pulls its two connection points together.

[{'name': 'Starting Block', 'description': 'Machine root. Cannot be placed or deleted, and only one can exist at a time. Initial position fixed, initial orientation is z+.', 'type id': 0, 'size': [1, 1, 1], 'constructible_points': [{'id': 0, 'pos': [0, 0, 0.5], 'orientation': 'Front'}, {'id': 1, 'pos': [0, 0, -0.5], 'orientation': 'Back'}, {'id': 2, 'pos': [-0.5, 0, 0], 'orientation': 'Left'}, {'id': 3, 'pos': [0.5, 0, 0], 'orientation': 'Right'}, {'id': 4, 'pos': [0, 0.5, 0], 'orientation': 'Up'}, {'id': 5, 'pos': [0, -0.5, 0], 'orientation': 'Down'}], 'mass': 0.25}, {'name': 'Small Wooden Block', 'description': 'A basic construction block, cubic in shape.', 'type id': 15, 'size': [1, 1, 1], 'constructible_points': [{'id': 0, 'pos': [0, 0, 1], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 0.5], 'orientation': 'Left'}, {'id': 2, 'pos': [0.5, 0, 0.5], 'orientation': 'Right'}, {'id': 3, 'pos': [0, 0.5, 0.5], 'orientation': 'Up'}, {'id': 4, 'pos': [0, -0.5, 0.5], 'orientation': 'Down'}], 'mass': 0.3}, {'name': 'Wooden Block', 'description': 'A basic construction block.', 'type id': 1, 'size': [1, 1, 2], 'constructible_points': [{'id': 0, 'pos': [0, 0, 2], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 0.5], 'orientation': 'Left'}, {'id': 2, 'pos': [-0.5, 0, 1.5], 'orientation': 'Left'}, {'id': 3, 'pos': [0.5, 0, 0.5], 'orientation': 'Right'}, {'id': 4, 'pos': [0.5, 0, 1.5], 'orientation': 'Right'}, {'id': 5, 'pos': [0, 0.5, 0.5], 'orientation': 'Up'}, {'id': 6, 'pos': [0, 0.5, 1.5], 'orientation': 'Up'}, {'id': 7, 'pos': [0, -0.5, 0.5], 'orientation': 'Down'}, {'id': 8, 'pos': [0, -0.5, 1.5], 'orientation': 'Down'}], 'mass': 0.5}, {'name': 'Wooden Rod', 'description': 'A basic construction block, slender and fragile.', 'type id': 41, 'size': [1, 1, 2], 'constructible_points': [{'id': 0, 'pos': [0, 0, 2], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 0.5], 'orientation': 'Left'}, {'id': 2, 'pos': [-0.5, 0, 1.5], 'orientation': 'Left'}, {'id': 3, 'pos': [0.5, 0, 0.5], 'orientation': 'Right'}, {'id': 4, 'pos': [0.5, 0, 1.5], 'orientation': 'Right'}, {'id': 5, 'pos': [0, 0.5, 0.5], 'orientation': 'Up'}, {'id': 6, 'pos': [0, 0.5, 1.5], 'orientation': 'Up'}, {'id': 7, 'pos': [0, -0.5, 0.5], 'orientation': 'Down'}, {'id': 8, 'pos': [0, -0.5, 1.5], 'orientation': 'Down'}], 'mass': 0.5}, {'name': 'Log', 'description': 'A basic construction block.', 'type id': 63, 'size': [1, 1, 3], 'constructible_points': [{'id': 0, 'pos': [0, 0, 3], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 0.5], 'orientation': 'Left'}, {'id': 2, 'pos': [-0.5, 0, 1.5], 'orientation': 'Left'}, {'id': 3, 'pos': [-0.5, 0, 2.5], 'orientation': 'Left'}, {'id': 4, 'pos': [0.5, 0, 0.5], 'orientation': 'Right'}, {'id': 5, 'pos': [0.5, 0, 1.5], 'orientation': 'Right'}, {'id': 6, 'pos': [0.5, 0, 2.5], 'orientation': 'Right'}, {'id': 7, 'pos': [0, 0.5, 0.5], 'orientation': 'Up'}, {'id': 8, 'pos': [0, 0.5, 1.5], 'orientation': 'Up'}, {'id': 9, 'pos': [0, 0.5, 2.5], 'orientation': 'Up'}, {'id': 10, 'pos': [0, -0.5, 0.5], 'orientation': 'Down'}, {'id': 11, 'pos': [0, -0.5, 1.5], 'orientation': 'Down'}, {'id': 12, 'pos': [0, -0.5, 2.5], 'orientation': 'Down'}], 'mass': 1}, {'name': 'Rotating Block', 'description': 'Powered, spins about its placement-normal axis. Only sub-blocks on constructible_points 1 to 4 rotate with it. Rotation torque is passed to its parent, scaled by the total weight of itself and all descendant sub-blocks.', 'type id': 22, 'size': [1, 1, 1], 'constructible_points': [{'id': 0, 'pos': [0, 0, 1], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 0.5], 'orientation': 'Left'}, {'id': 2, 'pos': [0.5, 0, 0.5], 'orientation': 'Right'}, {'id': 3, 'pos': [0, 0.5, 0.5], 'orientation': 'Up'}, {'id': 4, 'pos': [0, -0.5, 0.5], 'orientation': 'Down'}], 'Special Attributes': {'Rotation Axis': 'Front', 'NonStatic': 'True', 'NonStable': 'True'}, 'mass': 1}, {'name': 'Boulder', 'description': 'A rock that will not directly connect to other blocks even if built on them, high mass.', 'type id': 36, 'size': [1.9, 1.9, 1.9], 'Special Attributes': {'NonStable': 'True'}, 'mass': 5}, {'name': 'Container', 'description': 'Has railing around the build point. If towards y+, can hold sub-blocks like a bowl. Mainly used to hold loose block such as boulder. keep around clear to avoid overlap.', 'type id': 30, 'size': [2.4, 3, 2.8], 'constructible_points': [{'id': 0, 'pos': [0, 0, 1], 'orientation': 'Front'}], 'mass': 0.5}, {'name': 'Spring', 'description': 'It primarily serves as a buffer and shock absorber. It is similar in shape to a wooden block, with all constructible_points located at the far end of the block.', 'type id': 16, 'size': [1, 1, 2], 'constructible_points': [{'id': 0, 'pos': [0, 0, 2], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 1.5], 'orientation': 'Left'}, {'id': 2, 'pos': [0.5, 0, 1.5], 'orientation': 'Right'}, {'id': 3, 'pos': [0, 0.5, 1.5], 'orientation': 'Up'}, {'id': 4, 'pos': [0, -0.5, 1.5], 'orientation': 'Down'}], 'mass': 0.5}, {'name': 'Rubber Band', 'description': 'A linear block that attaches to two other blocks and can quickly pull the two ends together. Its tension force is almost entirely dependent on its length.', 'type id': 9, 'Special Attributes': {'Linear': 'True', 'NonStatic': 'True', 'Tension Direction': 'Towards the center of the line segment between the two constructible_points'}, 'mass': 0.4}, {'name': 'Ballast', 'description': 'It serves as a counterweight, has a large mass, and is shaped like a cube.', 'type id': 35, 'size': [1, 1, 1], 'constructible_points': [{'id': 0, 'pos': [0, 0, 1], 'orientation': 'Front'}, {'id': 1, 'pos': [-0.5, 0, 0.5], 'orientation': 'Left'}, {'id': 2, 'pos': [0.5, 0, 0.5], 'orientation': 'Right'}, {'id': 3, 'pos': [0, 0.5, 0.5], 'orientation': 'Up'}, {'id': 4, 'pos': [0, -0.5, 0.5], 'orientation': 'Down'}], 'mass': 3},{
        "name": "Powered Wheel",
        "description": "Powered, a mechanical device used to move objects on the ground.",
        "type id": 2,
        "size": [2, 2, 0.5],
        "constructible_points": [
            {"ID": 0, "pos": [0, 0, 0.5], "orientation": "Front"}
        ],
        "Special Attributes": {
            "Rotation Axis": "Front",
            NonStatic': 'True', 'NonStable': 'True',
            "direction of power": [
                {"facing": "x+", "direction": "z+"},
                {"facing": "x-", "direction": "z+"},
                {"facing": "z+", "direction": "x-"},
                {"facing": "z-", "direction": "x+"}
            ]
        },
        "mass": 1
    },
    {
        "Name": "Decouper",
        "Description": "The Decoupler is used to detach two initially attached objects.",
        "Type ID": 4,
        "Size": [1, 1, 1],
        "Constructible Points Properties": [
            {"ID": 0, "Coordinates": [0, 0, 1], "Orientation": "Front"}
        ],
        "Special Attributes": {
            "Decope Direction": "Back-Front"
        },
        "Mass": 0.5
    },
    {
        "Name": "Winch",
        "Description": "The Winch is a machine block composed of two winches at its end node which connects two blocks by a variable-length rope.",
        "Type ID": 45,
        "Special Attributes": {
            "Linear": "True",
            "NonStatic":"True"
        },
        "Mass": 0.4
    }]

**JSON Output Format: Plese only contain these infos for each block, do not add comments inside json.**
*   **id**: block type_id
*   **order_id**: this is i-th block
*   **parent**: pyarent block's order_id
*   **bp_id**: pyarent block's constructible_point id
*   **If standard Block:** `{"id": <int>, "order_id": <int>, "parent": <int>, "bp_id": <int>}`
*   **If linear Block (id: 9):** `{"id": 9, "order_id": <int>, "parent_a": <int>, "bp_id_a": <int>, "parent_b": <int>, "bp_id_b": <int>}`

**Construction Guidance:**
    **Your task:** Add new blocks based on the initial JSON and construction requirements, do not delete the initial structure, and output the final complete JSON.

    **Core Building Rules:**
        **Block Usage:** Only select from the list of block data. You do not have to use all kinds of blocks, think what is necessary.
        **Collision Prevention:** Must calculate the coordinates and orientation of new blocks based on the orientation and position of the parent block to ensure that the new block does not overlap with the existing structure.

    **Coordinate System and Orientation:** The initial orientation of all blocks is Z+. The final orientation of new blocks must be transformed based on the parent block's orientation and the relative direction of the building point, according to the following rules:
        *   **Oriented z+:** Front z+, Back z-, Left x-, Right x+, Up y+, Down y-
        *   **Oriented z-:** Front z-, Back z+, Left x+, Right x-, Up y+, Down y-
        *   **Oriented x-:** Front x-, Back x+, Left z-, Right z+, Up y+, Down y-
        *   **Oriented x+:** Front x+, Back x-, Left z+, Right z-, Up y+, Down y-
        *   **Oriented y+:** Front y+, Back y-, Left x-, Right x+, Up z-, Down z+
        *   **Oriented y-:** Front y-, Back y+, Left x-, Right x+, Up z+, Down z-

**Notes:**
    **Building Principles**
    1.  **Collision Prevention and Size**:
        *   New blocks must not overlap with any existing blocks.
        *   The overall mechanical size must be kept within the range of `17(length Z) x 17(width X) x 9.5(height Y)`.
    2.  **Function-Oriented**:
        *   **Exclusive Connection Points**: A constructible point can only be connected once, but linear blocks can use occupied connection points.
        *   **Correct Orientation**: Ensure power blocks oriented correctly.
    3.  **Efficiency First**:
        *   Complete the design goal with the fewest blocks possible.

**Final Response Format:**
Your response must contain **only** these two parts:
1.  `Construction Idea:` A brief explanation of your design,remember to consider necessary block types, note them in ```necessary_blocks [type_1,type_2 ...]```, no more than 300 words.
2.  `JSON:` The complete JSON code inside a ```json ... ``` block. here is an example: ```json
    [
        {"id":"0","order_id":0,"parent":-1,"bp_id":-1},
        {"id": <int>, "order_id": <int>, "parent": <int>, "bp_id": <int>},
        ...
    ]
```